FROM ubuntu:18.04
ENV container docker
RUN apt-get update && \
    apt-get install -y software-properties-common && \
    rm -rf /var/lib/apt/lists/*
RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test

RUN export TZ=Europe/Berlin
RUN apt-get install tzdata 
RUN apt-get install -y libgtk-3-dev pkg-config apt-utils
RUN apt-get install -y git curl unzip tar

RUN apt install -y python3-pip python3-dev
RUN pip3 install numpy
RUN pip3 install opencv-python
RUN ln -s /usr/bin/python3 /usr/bin/python
RUN apt-get install -y python3-opencv 
RUN apt-get install -y libopencv-dev

RUN apt-get install -y wget
RUN apt-get install -y libssl-dev openssl
RUN apt-get install -y gcc g++
RUN apt-get install -y cmake
RUN mv /usr/bin/cmake /usr/bin/cmake.3.10.2
RUN apt-get install -y libssl-dev
RUN cd /opt && wget https://github.com/Kitware/CMake/releases/download/v3.17.1/cmake-3.17.1.tar.gz && tar -zxvf ./cmake-3.17.1.tar.gz
RUN cd /opt && rm ./cmake-3.17.1.tar.gz
RUN cd /opt/cmake-3.17.1  && ./bootstrap
RUN cd /opt/cmake-3.17.1  && make
RUN cd /opt/cmake-3.17.1  && make install

RUN git clone https://github.com/microsoft/vcpkg.git
RUN cd /vcpkg && ./bootstrap-vcpkg.sh
RUN cd /vcpkg && ./vcpkg integrate install
RUN cd /vcpkg && ./vcpkg install magic-enum
RUN cd /vcpkg && ./vcpkg install libuv

RUN cd /opt && wget https://dl.bintray.com/boostorg/release/1.72.0/source/boost_1_72_0.tar.bz2 && tar --bzip2 -xf ./boost_1_72_0.tar.bz2
RUN cd /opt && rm ./boost_1_72_0.tar.bz2
RUN cd /opt/boost_1_72_0 && ./bootstrap.sh --prefix=/usr/
RUN cd /opt/boost_1_72_0 && ./b2
RUN cd /opt/boost_1_72_0 && ./b2 install




ENV TANGO_HOST=ictrlfs.ictrl.frm2:10000
RUN echo "deb [trusted=yes] https://forge.frm2.tum.de/repos bionic/" >>/etc/apt/sources.list.d/mlz.list
RUN apt-get update

RUN echo "tango-common tango-common/tango-host string ${TANGO_HOST}" |  debconf-set-selections
RUN echo 'tango-db tango-db/dbconfig-install boolean false' |  debconf-set-selections
RUN apt-get install -y python3-pytango
RUN apt-get install -y tango-entangle
ARG entangle_DIR=/usr/lib/python3/dist-packages/entangle
RUN cd ${entangle_DIR}/device && mkdir charm 


RUN apt-get install -y gcc-9 g++-9
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 900 --slave /usr/bin/g++ g++ /usr/bin/g++-9

ADD https://api.github.com/repos/zweistein-frm2/CHARMing/git/refs/heads/master version.json
RUN git clone -b master https://github.com/zweistein-frm2/CHARMing.git CHARMing/
#RUN git clone https://github.com/zweistein-frm2/CHARMing.git
RUN cd CHARMing && git submodule init && git submodule update
ARG targ1=/hiersolleshin
RUN mkdir ${targ1}
RUN echo ${targ1}
RUN cd ${targ1} && cmake -DCMAKE_TOOLCHAIN_FILE=/vcpkg/scripts/buildsystems/vcpkg.cmake   -DSIGSLOT_PATH=/CHARMing/sigslot/include -DASIO_EXTENSIONS_PATH=/CHARMing/asio-extensions/include -S /CHARMing/charm/ -B ${targ1} 
RUN cd ${targ1} && make
#RUN cd /etc && mkdir charm/

ARG targ2=${entangle_DIR}/device/charm
# we need unique name so that multiple devices can coexist on same tango-server 
RUN < /dev/urandom tr -dc A-Za-z0-9| head -c14 > NUMBER.tmp && cp /CHARMing/python-mesytecsystem/entangle/example/charm-SANS1.res /etc/entangle/charm-$(cat NUMBER.tmp)-SANS1.res

RUN cd ${targ2} && cmake -DCMAKE_TOOLCHAIN_FILE=/vcpkg/scripts/buildsystems/vcpkg.cmake -DCharm_DIR=/CHARMing/charm -DPacketSender_DIR=/CHARMing/PacketSender -DSIGSLOT_PATH=/CHARMing/sigslot/include -DASIO_EXTENSIONS_PATH=/CHARMing/asio-extensions/include -Dpyboostcvconverter_DIR=/CHARMing/pyboostcvconverter -S /CHARMing/python-mesytecsystem/ -B ${targ2} 
RUN  echo "#!/bin/sh" >  replay.sh && \
	 echo "cd /CHARMing/python-mesytecsystem/entangle/example" >> replay.sh && \
	 echo "cmake -D$HOSTNAME">>replay.sh && \
	 echo "cp /CHARMing/python-mesytecsystem/entangle/example/charm-$HOSTNAME-replay.res /etc/entangle/charm-$HOSTNAME-replay.res" >> replay.sh
	 echo "python bin/entangle-server charm-$HOSTNAME-replay" >> replay.sh && \
	 chmod +x /replay.sh
	 
RUN echo "#!/bin/sh" >  bootstrap.sh && \
	echo 
CMD [${targ1}/charm]



