name: frm2-charm # you probably want to 'snapcraft register <name>'
version: '1' # just for humans, typically '1.2+git' or '1.3.2'
summary: Mesytec detector software # 79 char long summary
description: |
  supports Mesytec neutron detector hardware as well as the new charm project detector. 
  
base: core18
grade: devel # must be 'stable' to release into candidate/stable channels
confinement: devmode # use 'strict' once you have the right plugs and slots


build-packages:
 #   - build-essential
 #   - automake
 #   - libtool
 #   - libssl-dev
 #   - zlib1g-dev
 #   - libc6-dbg
 #   - ccache
 #   - gcc
 #   - g++
#    - python3
    - software-properties-common
#    - curl
    - unzip
#    - tar
#    - libopencv-dev
#    - nano
 #   - libpsm-infinipath1
     
parts:
 gcc-9:
    plugin: nil
    override-pull: |
      add-apt-repository -yu ppa:ubuntu-toolchain-r/test
      apt install -y gcc-9 g++-9
      update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-9 900 --slave /usr/bin/g++ g++ /usr/bin/g++-9
      update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7
     # cp /usr/lib/x86_64-linux-gnu/libstdc++.so.* $SNAPCRAFT_STAGE/usr/lib/x86_64-linux-gnu/
    filesets:
     stdlibs:
      - usr/lib/x86_64-linux-gnu/libstdc++.so.6.*
    prime:
      - $stdlibs
 
 boost:
    source:  https://github.com/boostorg/boost.git
    source-type: git
    source-tag: "boost-1.73.0"
    plugin: nil
         
    override-build: |
      ./bootstrap.sh --prefix=/usr/
      ./b2 headers
      ./b2 cxxflags="-std=c++17" install --prefix=$SNAPCRAFT_PRIME
    filesets:
     libboost: [lib/libboost_*.so*]
    
    stage:
     - $libboost
   # override-prime: |
  #   snapcraftctl prime
     
     
   #  - $libboost   #lib/libboost_chrono.so.*
 #    - lib/libboost_filesystem.so.1.73.0
 #    - lib/libboost_iostreams.so.1.73.0
 #    - lib/libboost_log.so.1.73.0
 #    - lib/libboost_program_options.so.1.73.0
 #    - lib/libboost_regex.so.1.73.0
 #    - lib/libboost_thread.so.1.73.0
 
 vcpkg:
    source: https://github.com/microsoft/vcpkg.git
    source-type: git
    plugin: nil
    override-build: |
      ./bootstrap-vcpkg.sh
      ./vcpkg install libuv
      ./vcpkg install magic-enum
      ./vcpkg install opencv
      ./vcpkg integrate install
    filesets:
     lib: [lib/*]
     share: [share/*]
     opencv-dependencies: 
      - lib/libz.so*
      - lib/liblzma.so.*
      - libpcre.so.*
     
    stage:
     - $lib
     - $share
     - $opencv-dependencies
     
 asio-extensions:
    source: https://github.com/zweistein-frm2/asio-extensions.git
    source-type: git
    plugin: nil
 sigslot:
    source: https://github.com/palacaze/sigslot.git
    source-type: git
    plugin: nil
 frm2-charm:
    build-snaps: [cmake]
    after: 
     - gcc-9
     - boost
     - vcpkg
     - asio-extensions
     - sigslot
    plugin: cmake
    source: .
    configflags: []
    override-build: |
       cmake \
        -DCMAKE_INSTALL_PREFIX=$SNAPCRAFT_PART_INSTALL/usr/local \
        -DCMAKE_BUILD_TYPE=Release \
        -DVCPKG_TARGET_TRIPLET=x64-linux \
        -D_VCPKG_ROOT_DIR=/root/parts/vcpkg/build \
        -DCMAKE_TOOLCHAIN_FILE=/root/parts/vcpkg/build/scripts/buildsystems/vcpkg.cmake \
        -DOpenCV_DIR=/root/parts/vcpkg/build/installed/x64-linux/share/opencv \
        -DProtobuf_DIR=/root/parts/vcpkg/build/installed/x64-linux/share/protobuf \
        -DBoost_INCLUDE_DIR=/root/prime/include  \
        -DProtobuf_INCLUDE_DIRS=/root/parts/vcpkg/build/installed/x64-linux/include  \
        -Dunofficial-libuv_DIR=/root/parts/vcpkg/build/installed/x64-linux/share/unofficial-libuv \
        -Dmagic_enum_DIR=/root/parts/vcpkg/build/installed/x64-linux/share/magic_enum \
        -DASIO_EXTENSIONS_PATH=/root/parts/asio-extensions/build/include \
        -DCharm_DIR=/root/parts/frm2-charm/src \
        -DSIGSLOT_PATH=/root/parts/sigslot/build/include  \
        -DSNAPCRAFT_PART_INSTALL=bin \
        $SNAPCRAFT_PART_SRC
       make -j 4
       make install
      
    stage-packages:
     - libgtk-3-dev
     - liblzma-dev
     




apps:
 frm2-charm:
  command: bin/charm
  environment:
   LD_LIBRARY_PATH: "$SNAP/usr/lib;$SNAP/usr/local/lib"
        

 